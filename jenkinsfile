pipeline {

    options {
        buildDiscarder(logRotator(numToKeepStr: '1', artifactNumToKeepStr: '1'))
    }

    agent any

    tools {
        maven 'MAVEN_3.8.7'
    }
    stages {
        stage('Code Compilation') {
            steps {
                echo 'code compilation is starting'
                sh 'mvn clean compile'
				echo 'code compilation is completed'
            }
        }
	stage('code packaging')
        		{
        						steps
        						{
        						echo 'code packaging started'
        						sh 'mvn clean package'
        						echo 'code packaging finished'
        						}
							}
								stage('Sonarqube') {
                                environment {
                                    scannerHome = tool 'sonarqube-scanner'
                                }
                                steps {
                                    withSonarQubeEnv('sonar-server') {
                                        sh "${scannerHome}/bin/sonar-scanner"
                                        sh 'mvn sonar:sonar'
                                    }
                                    timeout(time: 10, unit: 'MINUTES') {
                                        waitForQualityGate abortPipeline: true
                                        }
                                      }
                                      }

         stage('Building & Tag Docker Image') {
            steps {
                echo 'Starting Building Docker Image'
                sh 'docker build -t gorekeshav6/vaishalirepo .'
                sh 'docker build -t vaishalirepo .'
                echo 'Completed  Building Docker Image'
            }
        }
        stage('Docker Image Scanning') {
            steps {
                echo 'Docker Image Scanning Started'
                sh 'java -version'
                echo 'Docker Image Scanning Started'
            }
        }
	   stage(' Docker push to Docker Hub') {
                   steps {
                      script {
                         withCredentials([string(credentialsId: 'dockerhubCred', variable: 'dockerhubCred')]){
                         sh 'docker login -u gorekeshav6 -p ${dockerhubCred}'
                         echo "Push Docker Image to DockerHub : In Progress"
                         sh 'docker push gorekeshav6/vaishalirepo:latest'
                         echo "Push Docker Image to DockerHub : In Progress"
                         sh 'whoami'
                         }
                      }
                    }
                }
 
           

      
	   stage(' Docker Image Push to Amazon ECR') {
             steps {
               script {
                  withDockerRegistry([credentialsId:'AWScred', url:"https://449616645784.dkr.ecr.ap-south-1.amazonaws.com"]){
		   sh """
                   echo "List the docker images present in local"
                   docker images
                    echo "Tagging the Docker Image: In Progress"
		   docker tag vaishali-repo:latest 449616645784.dkr.ecr.ap-south-1.amazonaws.com/vaishali-repo:latest
                   echo "Tagging the Docker Image: Completed"
                  echo "Push Docker Image to ECR : In Progress"
                  docker push 449616645784.dkr.ecr.ap-south-1.amazonaws.com/vaishali-repo:latest
                    echo "Push Docker Image to ECR : Completed"
                 """
                 }
              }
           }
        }
     
    }

}
